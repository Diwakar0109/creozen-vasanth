"""Add notes column to Appointment

Revision ID: 2f36bb4aaa50
Revises: 87f148e0c6d9
Create Date: 2025-08-22 23:29:52.533534

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2f36bb4aaa50'
down_revision: Union[str, Sequence[str], None] = '87f148e0c6d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# CORRECTED CODE for 2f36bb4aaa50...py

# Make sure this import is at the top of the file
from sqlalchemy.sql import func
def upgrade() -> None:
    # Stage 1: Add the new column, allowing it to be NULL temporarily.
    op.add_column('prescriptions', sa.Column('hospital_id', sa.Integer(), nullable=True))

    # Stage 2: Populate the new hospital_id by joining through the doctor (user) table.
    op.execute(
        """
        UPDATE prescriptions AS p
        SET hospital_id = u.hospital_id
        FROM users AS u
        WHERE p.doctor_id = u.id AND p.hospital_id IS NULL
        """
    )

    # Stage 3: Now that all rows have a value, make the column NOT NULL.
    op.alter_column('prescriptions', 'hospital_id', nullable=False)
    
    # Add the foreign key constraint
    op.create_foreign_key(
        'fk_prescriptions_hospital_id', 'prescriptions', 'hospitals', 
        ['hospital_id'], ['id'], ondelete='CASCADE'
    )
    
def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('prescriptions', 'updated_at')
    op.drop_column('prescriptions', 'created_at')
    # ### end Alembic commands ###
